# ***************************************************************************************************************************
# * Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements.  See the NOTICE file *
# * distributed with this work for additional information regarding copyright ownership.  The ASF licenses this file        *
# * to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance            * 
# * with the License.  You may obtain a copy of the License at                                                              *
# *                                                                                                                         *
# *  http://www.apache.org/licenses/LICENSE-2.0                                                                             *
# *                                                                                                                         *
# * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an  *
# * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the        *
# * specific language governing permissions and limitations under the License.                                              *
# *                                                                                                                         *
# ***************************************************************************************************************************

QueryableParam.q.type = Map<String,String>
QueryableParam.q.desc = Query parameter.\nUse to return rows that match a specified search string.\nExample:&q={name:'Bill*',birthDate:'>2000'}.\nSee DateMatcher for syntax of search parameters on objects of type Date and Calendar.\nSee NumberMatcher for syntax of search parameters on objects of type Number.\nSee StringMatcher for syntax of search parameters on objects of all other types.
QueryableParam.v.type = List<String> or String (comma-delimited list)
QueryableParam.v.desc = View parameter.\nUse to return a specified set of columns.\nExample:  &v=['name','birthDate']
QueryableParam.s.type = Map<String,Character>
QueryableParam.s.desc = Sort parameter.\nUse to sort results by the specified columns.\nThe JSON object keys are the column names, and the values are either 'A' for ascending or 'D' for descending.\nExample:  &s={name:'A',birthDate:'D'}
QueryableParam.g.type = List<String> or String (comma-delimited-list)
QueryableParam.g.desc = Group-by parameter.\nUse to perform a group-by rollup on the specified columns.\nEssentially, this returns the specified list of columns, plus an additional 'count' column showing the grouped results.\nThis is very similar to the group-by functionality in SQL.
QueryableParam.i.type = boolean
QueryableParam.i.desc = Case-insensitive parameter.\nUse for case-insensitive matching on the &q parameter.
QueryableParam.p.type = int
QueryableParam.p.desc = Position parameter.\nUse to only return rows at the specified index position (zero-indexed).
QueryableParam.l.type = int
QueryableParam.l.desc = Limit parameter.\nUse to only return the specified number of rows.\n0 returns all rows.

HeaderParam.accept.type = String
HeaderParam.accept.desc = Specify the HTTP Accept header (e.g. &accept=text/xml).
HeaderParam.accept-encoding.type = String
HeaderParam.accept-encoding.desc = Specify the HTTP Accept-Encoding header (e.g. &accept-encoding=SJIS).
HeaderParam.method.type = String
HeaderParam.method.desc = Override the HTTP method (e.g. &method=HEAD).\nThis can also be used to invoke non-HTTP-standard methods.
HeaderParam.content.type = *
HeaderParam.content.desc = Can be used to pass in content for PUT/POST methods.\nTypically the content will be a JSON object or array.
HeaderParam.plainText.type = Boolean
HeaderParam.plainText.desc = Forces the response Content-Type to be 'text/plain' regardless of what's specified on the Accept header.